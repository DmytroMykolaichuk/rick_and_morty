
Поиск
Писать
Зарегистрироваться

Войти



На странице «/blog/[slug]» отсутствует «generateStaticParams()». Решение
Атихар Хоссен Махир
Атихар Хоссен Махир

·
Следовать

4 минуты чтения
·
27 января 2024 г.
56





Проблемы с Git/54393

Я пытался создать статическую сборку для приложения Nextjs, ориентированного на блог (версия 14.0.4). После настройки next.config.js с помощью {output: 'export', } при попытке создать сборку npm run dev я столкнулся с ошибкой.

На странице «/research-and-media/[slug]» отсутствует «generateStaticParams()», поэтому ее нельзя использовать с конфигурацией «вывод: экспорт».

Итак, я провел небольшое исследование и обнаружил некоторые аспекты, прежде чем nextjs исправит ошибку, как только они упомянуты на странице git Issue 54393.

тыпонимание `generateStaticParams()

В развивающемся мире веб-разработки создание статических сайтов стало краеугольным камнем для создания быстрых, безопасных и масштабируемых веб-сайтов. Этот подход предварительно отображает страницы во время сборки, предлагая такие преимущества, как сокращение времени загрузки, улучшение SEO и снижение нагрузки на сервер. В этом контексте функцияgenerateStaticParams() становится мощным инструментом для разработчиков, особенно при работе с такими платформами, как Next.js или Nuxt.js, которые поддерживают генерацию статических сайтов. В этом сообщении блога подробно рассматриваются тонкости методаgenerateStaticParams(), его применения и лучшие практики по максимизации его потенциала.

Образец

// приложение/сообщения/[параметры]/page.js

// это должно выполняться на сервере 
// Возвращает список `params` для заполнения динамического сегмента 
экспорта [slug]  async  functiongenerateStaticParams  ( ) { const Posts = await fetch ( 'https://.../posts' ). затем ( ( res ) => res.json ( )) возвращаем сообщения. map ( ( post ) => ({ slug : post. slug ,   })) } // Несколько версий этой страницы будут сгенерированы статически // с использованием `params`, возвращаемого `generateStaticParams`, функцией экспорта по умолчанию Page ( { params } ) { const { slug } = параметры возвращаются (   <ClientComponent/> ) }
   
 
  